# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
# import libraries
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

#reading csv and converting the date format
share_df = pd.read_csv("C:\\Users\\limyu\\Downloads\\stock_price.csv")
print(share_df.head())
share_df['Date'] = pd.to_datetime(share_df['Date'].astype(str), format='%Y%m%d')
print(share_df.head())

#reading additional csv, converting date formate, and inverse the row arrangements
dow_df = pd.read_csv("C:\\Users\\limyu\\Downloads\\DJI.csv")
dow_df=dow_df.iloc[::-1]
print(dow_df.head())
dow_df['Date'] = pd.to_datetime(dow_df['Date'].astype(str), format='%m/%d/%Y')
print(dow_df.head())

# merge df from two separated csv, remove commas, remove space, fit linear regression
merged_df = share_df.merge(dow_df, on='Date', suffixes=('_share','_dow'))
print(merged_df.head())
print(share_df.shape, dow_df.shape, merged_df.shape)
merged_df = merged_df.replace(',','', regex=True)
X = merged_df["Open_dow"].str.strip()
X=X.astype(float)
X=X.values.reshape(-1, 1)
y=merged_df["Open_share"].values
reg = LinearRegression()
reg.fit(X, y)
predictions = reg.predict(X)
print(predictions[:5])

# plot parameter A against parameter B
ax = plt.axes()
ax.scatter(X, y, color='r')
ax.plot(X, predictions, color='b')
tick_spacing = 1000
ax.xaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))
plt.ylabel("Maybank Share Price Open")
plt.xlabel("Dow Jones Index")
plt.xticks(rotation=90)
plt.show()

# model training
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)
reg_all = LinearRegression()
reg_all.fit(X_train, y_train)
y_pred = reg_all.predict(X_test)
print(reg_all.score(X_test, y_test))

# model evaluation
from sklearn.metrics import mean_squared_error
print(mean_squared_error(y_test, y_pred, squared=False))






